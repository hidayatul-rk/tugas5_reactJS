{"version":3,"sources":["Lib/DaftarMakanan.js","Form/FormMakanan.js","Pages/MenuMakanan.js","App.js","serviceWorker.js","index.js"],"names":["DaftarMakanan","namaMakanan","harga","img","FormMakanan","props","state","pesanan","jumlah","hendleChange","bind","hendleChangeJumlah","hendleSubmit","React","createRef","e","this","setState","target","value","preventDefault","alert","current","focus","onSubmit","onChange","type","ref","placeholder","Component","listmakanan","NamaMakanan","Harga","MenuMakanan","map","data","i","key","src","alt","width","height","App","className","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"gPA6BeA,EA5BO,CAClB,CACIC,YAAa,cACbC,MAAO,SACPC,IAAK,4EAET,CACIF,YAAa,OACbC,MAAO,SACPC,IAAK,sEAET,CACIF,YAAa,OACbC,MAAO,SACPC,IAAK,8EAET,CACIF,YAAa,OACbC,MAAO,SACPC,IAAK,8EAET,CACIF,YAAa,cACbC,MAAO,SACPC,IAAK,6F,OCiCEC,E,kDAvDX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MACL,CACIC,QAAS,GACTC,OAAQ,IAGZ,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,mBAAqB,EAAKA,mBAAmBD,KAAxB,gBAC1B,EAAKE,aAAe,EAAKA,aAAaF,KAAlB,gBACpB,EAAKH,QAAUM,IAAMC,YAXN,E,yDAeNC,GACTC,KAAKC,SAAS,CAAEV,QAASQ,EAAEG,OAAOC,U,yCAGnBJ,GACfC,KAAKC,SAAS,CAAET,OAAQO,EAAEG,OAAOC,U,mCAGxBJ,GACTA,EAAEK,iBACFC,MAEQ,yBAA2BL,KAAKV,MAAMC,QACtC,uBAAyBS,KAAKV,MAAME,QAG5CQ,KAAKC,SACA,CACGV,QAAS,GACTC,OAAQ,KAEhBQ,KAAKT,QAAQe,QAAQC,U,+BAGrB,OACI,6BACI,gCACI,0BAAMC,SAAUR,KAAKJ,cAEjB,2BAAOa,SAAUT,KAAKP,aAAciB,KAAK,OAAOP,MAAOH,KAAKV,MAAMC,QAASoB,IAAKX,KAAKT,QAASqB,YAAY,yBAC1G,2BAAOH,SAAUT,KAAKL,mBAAoBe,KAAK,SAASP,MAAOH,KAAKV,MAAME,OAAQoB,YAAY,2BAC9F,6BACA,6BACA,2BAAOF,KAAK,SAASP,MAAM,iB,GAjDzBU,aCGpBC,EAAc,CAChB,CACIC,YAAa,cACbC,MAAO,UAEX,CACID,YAAa,OACbC,MAAO,UAEX,CACID,YAAa,OACbC,MAAO,UAEX,CACID,YAAa,OACbC,MAAO,UAEX,CACID,YAAa,cACbC,MAAO,UAEX,CACID,YAAa,cACbC,MAAO,UAEX,CACID,YAAa,aACbC,MAAO,UAEX,CACID,YAAa,WACbC,MAAO,WA2CAC,E,uKArCP,OACI,6BACI,uDACA,+BACI,+BACI,4BACKjC,EAAckC,KAAI,SAACC,EAAMC,GACtB,OACI,wBAAIC,IAAKD,GACL,yBAAKE,IAAKH,EAAKhC,IAAKoC,IAAI,kBAAkBC,MAAM,MAAMC,OAAO,QAC7D,gCACI,2BAAIN,EAAKlC,aACT,0CAAgBkC,EAAKjC,eASjD,4CACC4B,EAAYI,KAAI,SAACC,EAAMC,GACpB,OACI,yBAAKC,IAAKD,GACN,2BACKD,EAAKJ,YADV,gBACoCI,EAAKH,WAMrD,kBAAC,EAAD,W,GAnCUH,aC3BXa,MARf,WACE,OACE,yBAAKC,UAAU,OACb,kBAAC,EAAD,QCKcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.4258ddb3.chunk.js","sourcesContent":["\r\nconst DaftarMakanan = [\r\n    {\r\n        namaMakanan: \"Nasi Padang\",\r\n        harga: \"20.000\",\r\n        img: \"https://s3-ap-southeast-1.amazonaws.com/niomic/img/sample/nasipadang.jpg\"\r\n    },\r\n    {\r\n        namaMakanan: \"Sate\",\r\n        harga: \"20.000\",\r\n        img: \"https://s3-ap-southeast-1.amazonaws.com/niomic/img/sample/sate.png\"\r\n    },\r\n    {\r\n        namaMakanan: \"Soto\",\r\n        harga: \"10.000\",\r\n        img: \"https://s3-ap-southeast-1.amazonaws.com/niomic/img/sample/sotolamongan.png\"\r\n    },\r\n    {\r\n        namaMakanan: \"Uduk\",\r\n        harga: \"10.000\",\r\n        img: \"https://s3-ap-southeast-1.amazonaws.com/niomic/img/sample/sotolamongan.png\"\r\n    },\r\n    {\r\n        namaMakanan: \"Nasi Kuning\",\r\n        harga: \"15.000\",\r\n        img: \"https://blog.tokowahab.com/wp-content/uploads/2020/03/Resep-Nasi-Kuning-Tumpeng-Mini.jpg\"\r\n    }\r\n];\r\n\r\nexport default DaftarMakanan","import React, { Component } from 'react';\r\n\r\nclass FormMakanan extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state =\r\n        {\r\n            pesanan: '',\r\n            jumlah: ''\r\n        }\r\n\r\n        this.hendleChange = this.hendleChange.bind(this);\r\n        this.hendleChangeJumlah = this.hendleChangeJumlah.bind(this);\r\n        this.hendleSubmit = this.hendleSubmit.bind(this);\r\n        this.pesanan = React.createRef();\r\n\r\n    }\r\n\r\n    hendleChange(e) {\r\n        this.setState({ pesanan: e.target.value });\r\n    }\r\n\r\n    hendleChangeJumlah(e) {\r\n        this.setState({ jumlah: e.target.value });\r\n    }\r\n\r\n    hendleSubmit(e) {\r\n        e.preventDefault();\r\n        alert\r\n            (\r\n                \"Pesanan Anda Adalah : \" + this.state.pesanan +\r\n                \" | Jumlah Pesanan : \" + this.state.jumlah\r\n            );\r\n\r\n        this.setState\r\n            ({\r\n                pesanan: \"\",\r\n                jumlah: \"\"\r\n            });\r\n        this.pesanan.current.focus()\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <center>\r\n                    <form onSubmit={this.hendleSubmit}>\r\n\r\n                        <input onChange={this.hendleChange} type=\"text\" value={this.state.pesanan} ref={this.pesanan} placeholder=\"Masukan Pesanan Anda\" />\r\n                        <input onChange={this.hendleChangeJumlah} type=\"number\" value={this.state.jumlah} placeholder=\"Masukan Jumlah Pesanan\" />\r\n                        <br />\r\n                        <br />\r\n                        <input type=\"submit\" value=\"Pesan\" />\r\n                    </form>\r\n                </center>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default FormMakanan","import React, { Component } from 'react';\r\n\r\nimport DaftarMakanan from '../Lib/DaftarMakanan';\r\nimport FormMakanan from '../Form/FormMakanan';\r\n\r\nconst listmakanan = [\r\n    {\r\n        NamaMakanan: \"Nasi Padang\",\r\n        Harga: \"20.000\"\r\n    },\r\n    {\r\n        NamaMakanan: \"Sate\",\r\n        Harga: \"20.000\"\r\n    },\r\n    {\r\n        NamaMakanan: \"Soto\",\r\n        Harga: \"10.000\"\r\n    },\r\n    {\r\n        NamaMakanan: \"Uduk\",\r\n        Harga: \"10.000\"\r\n    },\r\n    {\r\n        NamaMakanan: \"Nasi Kuning\",\r\n        Harga: \"15.000\"\r\n    },\r\n    {\r\n        NamaMakanan: \"Ayam Geprek\",\r\n        Harga: \"15.000\"\r\n    },\r\n    {\r\n        NamaMakanan: \"Pecel Lele\",\r\n        Harga: \"10.000\"\r\n    },\r\n    {\r\n        NamaMakanan: \"Mie Ayam\",\r\n        Harga: \"10.000\"\r\n    }\r\n];\r\nclass MenuMakanan extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3>DAFTAR MAKANAN FAVORITE</h3>\r\n                <table>\r\n                    <tbody>\r\n                        <tr>\r\n                            {DaftarMakanan.map((data, i) => {\r\n                                return (\r\n                                    <td key={i}>\r\n                                        <img src={data.img} alt=\"Product Makanan\" width=\"150\" height=\"100\" />\r\n                                        <center>\r\n                                            <p>{data.namaMakanan}</p>\r\n                                            <p>Harga : Rp. {data.harga}</p>\r\n                                        </center>\r\n                                    </td>\r\n                                );\r\n                            }\r\n                            )}\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                <h4>LIST MAKANAN</h4>\r\n                {listmakanan.map((data, i) => {\r\n                    return (\r\n                        <div key={i}>\r\n                            <p>\r\n                                {data.NamaMakanan} | Harga Rp. {data.Harga}\r\n                            </p>\r\n                        </div>\r\n                    )\r\n                }\r\n                )}\r\n                <FormMakanan />\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default MenuMakanan","import React from 'react';\nimport './App.css';\nimport MenuMakanan from './Pages/MenuMakanan'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MenuMakanan />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}